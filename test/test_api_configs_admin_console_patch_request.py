# coding: utf-8

"""
    Logto API references

    API references for Logto services. To learn more about how to interact with Logto APIs, see [Interact with Management API](https://docs.logto.io/docs/recipes/interact-with-management-api/).

    The version of the OpenAPI document: Cloud
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from py_logto.models.api_configs_admin_console_patch_request import ApiConfigsAdminConsolePatchRequest

class TestApiConfigsAdminConsolePatchRequest(unittest.TestCase):
    """ApiConfigsAdminConsolePatchRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ApiConfigsAdminConsolePatchRequest:
        """Test ApiConfigsAdminConsolePatchRequest
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ApiConfigsAdminConsolePatchRequest`
        """
        model = ApiConfigsAdminConsolePatchRequest()
        if include_optional:
            return ApiConfigsAdminConsolePatchRequest(
                sign_in_experience_customized = True,
                organization_created = True,
                development_tenant_migration_notification = py_logto.models._api_configs_admin_console_get_200_response_development_tenant_migration_notification._api_configs_admin_console_get_200_response_developmentTenantMigrationNotification(
                    is_paid_tenant = True, 
                    tag = '', 
                    read_at = 1.337, ),
                checked_charge_notification = py_logto.models._api_configs_admin_console_get_200_response_checked_charge_notification._api_configs_admin_console_get_200_response_checkedChargeNotification(
                    token = True, 
                    api_resource = True, 
                    machine_to_machine_app = True, 
                    tenant_member = True, )
            )
        else:
            return ApiConfigsAdminConsolePatchRequest(
        )
        """

    def testApiConfigsAdminConsolePatchRequest(self):
        """Test ApiConfigsAdminConsolePatchRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
