# coding: utf-8

"""
    Logto API references

    API references for Logto services.

    The version of the OpenAPI document: Cloud
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from py_logto.models.list_applications200_response_inner_custom_client_metadata import ListApplications200ResponseInnerCustomClientMetadata

class TestListApplications200ResponseInnerCustomClientMetadata(unittest.TestCase):
    """ListApplications200ResponseInnerCustomClientMetadata unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ListApplications200ResponseInnerCustomClientMetadata:
        """Test ListApplications200ResponseInnerCustomClientMetadata
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ListApplications200ResponseInnerCustomClientMetadata`
        """
        model = ListApplications200ResponseInnerCustomClientMetadata()
        if include_optional:
            return ListApplications200ResponseInnerCustomClientMetadata(
                cors_allowed_origins = [
                    '0'
                    ],
                id_token_ttl = 1.337,
                refresh_token_ttl = 1.337,
                refresh_token_ttl_in_days = 1.337,
                tenant_id = '',
                always_issue_refresh_token = True,
                rotate_refresh_token = True
            )
        else:
            return ListApplications200ResponseInnerCustomClientMetadata(
        )
        """

    def testListApplications200ResponseInnerCustomClientMetadata(self):
        """Test ListApplications200ResponseInnerCustomClientMetadata"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
