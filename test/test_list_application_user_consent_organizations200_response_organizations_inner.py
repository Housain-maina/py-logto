# coding: utf-8

"""
    Python SDK for Logto API

    Python SDK for Logto API.  Note: This SDK is for Logto Cloud and OSS. However, if you are using Logto OSS, some features available in the SDK may not work for you. Please refer to the response of `/api/swagger.json` endpoint on your Logto OSS instance for features available to you.

    The version of the OpenAPI document: 1.22.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from py_logto.models.list_application_user_consent_organizations200_response_organizations_inner import ListApplicationUserConsentOrganizations200ResponseOrganizationsInner

class TestListApplicationUserConsentOrganizations200ResponseOrganizationsInner(unittest.TestCase):
    """ListApplicationUserConsentOrganizations200ResponseOrganizationsInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ListApplicationUserConsentOrganizations200ResponseOrganizationsInner:
        """Test ListApplicationUserConsentOrganizations200ResponseOrganizationsInner
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ListApplicationUserConsentOrganizations200ResponseOrganizationsInner`
        """
        model = ListApplicationUserConsentOrganizations200ResponseOrganizationsInner()
        if include_optional:
            return ListApplicationUserConsentOrganizations200ResponseOrganizationsInner(
                tenant_id = '',
                id = '0',
                name = '0',
                description = '',
                custom_data = None,
                is_mfa_required = True,
                branding = py_logto.models.list_application_organizations_200_response_inner_branding.ListApplicationOrganizations_200_response_inner_branding(
                    logo_url = '', 
                    dark_logo_url = '', 
                    favicon = '', 
                    dark_favicon = '', ),
                created_at = 1.337
            )
        else:
            return ListApplicationUserConsentOrganizations200ResponseOrganizationsInner(
                tenant_id = '',
                id = '0',
                name = '0',
                description = '',
                custom_data = None,
                is_mfa_required = True,
                branding = py_logto.models.list_application_organizations_200_response_inner_branding.ListApplicationOrganizations_200_response_inner_branding(
                    logo_url = '', 
                    dark_logo_url = '', 
                    favicon = '', 
                    dark_favicon = '', ),
                created_at = 1.337,
        )
        """

    def testListApplicationUserConsentOrganizations200ResponseOrganizationsInner(self):
        """Test ListApplicationUserConsentOrganizations200ResponseOrganizationsInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
