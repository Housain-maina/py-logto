# coding: utf-8

"""
    Python SDK for Logto API

    Python SDK for Logto API.  Note: This SDK is for Logto Cloud and OSS. However, if you are using Logto OSS, some features available in the SDK may not work for you. Please refer to the response of `/api/swagger.json` endpoint on your Logto OSS instance for features available to you.

    The version of the OpenAPI document: 1.22.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from py_logto.api.experience_api import ExperienceApi


class TestExperienceApi(unittest.TestCase):
    """ExperienceApi unit test stubs"""

    def setUp(self) -> None:
        self.api = ExperienceApi()

    def tearDown(self) -> None:
        pass

    def test_add_user_profile(self) -> None:
        """Test case for add_user_profile

        Add user profile
        """
        pass

    def test_bind_mfa_verification(self) -> None:
        """Test case for bind_mfa_verification

        Bind MFA verification by verificationId
        """
        pass

    def test_create_and_send_verification_code(self) -> None:
        """Test case for create_and_send_verification_code

        Create and send verification code
        """
        pass

    def test_create_enterprise_sso_verification(self) -> None:
        """Test case for create_enterprise_sso_verification

        Create enterprise SSO verification
        """
        pass

    def test_create_new_password_identity_verification(self) -> None:
        """Test case for create_new_password_identity_verification

        Create new password identity verification
        """
        pass

    def test_create_password_verification(self) -> None:
        """Test case for create_password_verification

        Create password verification record
        """
        pass

    def test_create_social_verification(self) -> None:
        """Test case for create_social_verification

        Create social verification
        """
        pass

    def test_create_totp_secret(self) -> None:
        """Test case for create_totp_secret

        Create TOTP secret
        """
        pass

    def test_create_web_authn_authentication_verification(self) -> None:
        """Test case for create_web_authn_authentication_verification

        Create WebAuthn authentication verification
        """
        pass

    def test_create_web_authn_registration_verification(self) -> None:
        """Test case for create_web_authn_registration_verification

        Create WebAuthn registration verification
        """
        pass

    def test_generate_backup_codes(self) -> None:
        """Test case for generate_backup_codes

        Generate backup codes
        """
        pass

    def test_get_enabled_sso_connectors(self) -> None:
        """Test case for get_enabled_sso_connectors

        Get enabled SSO connectors by the given email's domain
        """
        pass

    def test_identify_user(self) -> None:
        """Test case for identify_user

        Identify user for the current interaction
        """
        pass

    def test_init_interaction(self) -> None:
        """Test case for init_interaction

        Init new interaction
        """
        pass

    def test_reset_user_password(self) -> None:
        """Test case for reset_user_password

        Reset user password
        """
        pass

    def test_skip_mfa_binding_flow(self) -> None:
        """Test case for skip_mfa_binding_flow

        Skip MFA binding flow
        """
        pass

    def test_submit_interaction(self) -> None:
        """Test case for submit_interaction

        Submit interaction
        """
        pass

    def test_update_interaction_event(self) -> None:
        """Test case for update_interaction_event

        Update interaction event
        """
        pass

    def test_verify_backup_code(self) -> None:
        """Test case for verify_backup_code

        Verify backup code
        """
        pass

    def test_verify_enterprise_sso_verification(self) -> None:
        """Test case for verify_enterprise_sso_verification

        Verify enterprise SSO verification
        """
        pass

    def test_verify_social_verification(self) -> None:
        """Test case for verify_social_verification

        Verify social verification
        """
        pass

    def test_verify_totp_verification(self) -> None:
        """Test case for verify_totp_verification

        Verify TOTP verification
        """
        pass

    def test_verify_verification_code_verification(self) -> None:
        """Test case for verify_verification_code_verification

        Verify verification code
        """
        pass

    def test_verify_web_authn_authentication_verification(self) -> None:
        """Test case for verify_web_authn_authentication_verification

        Verify WebAuthn authentication verification
        """
        pass

    def test_verify_web_authn_registration_verification(self) -> None:
        """Test case for verify_web_authn_registration_verification

        Verify WebAuthn registration verification
        """
        pass


if __name__ == '__main__':
    unittest.main()
