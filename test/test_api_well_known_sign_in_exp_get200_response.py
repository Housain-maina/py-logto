# coding: utf-8

"""
    Logto API references

    API references for Logto services. To learn more about how to interact with Logto APIs, see [Interact with Management API](https://docs.logto.io/docs/recipes/interact-with-management-api/).

    The version of the OpenAPI document: Cloud
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from py_logto.models.api_well_known_sign_in_exp_get200_response import ApiWellKnownSignInExpGet200Response

class TestApiWellKnownSignInExpGet200Response(unittest.TestCase):
    """ApiWellKnownSignInExpGet200Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ApiWellKnownSignInExpGet200Response:
        """Test ApiWellKnownSignInExpGet200Response
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ApiWellKnownSignInExpGet200Response`
        """
        model = ApiWellKnownSignInExpGet200Response()
        if include_optional:
            return ApiWellKnownSignInExpGet200Response(
                id = '0',
                color = py_logto.models._api_sign_in_exp_patch_200_response_color._api_sign_in_exp_patch_200_response_color(
                    primary_color = '#bf3', 
                    is_dark_mode_enabled = True, 
                    dark_primary_color = '#bf3', ),
                branding = py_logto.models._api_interaction_consent_get_200_response_application_branding._api_interaction_consent_get_200_response_application_branding(
                    logo_url = '', 
                    dark_logo_url = '', 
                    favicon = '', ),
                language_info = py_logto.models._api_sign_in_exp_patch_200_response_language_info._api_sign_in_exp_patch_200_response_languageInfo(
                    auto_detect = True, 
                    fallback_language = 'af-ZA', ),
                terms_of_use_url = '',
                privacy_policy_url = '',
                sign_in = py_logto.models._api_sign_in_exp_patch_200_response_sign_in._api_sign_in_exp_patch_200_response_signIn(
                    methods = [
                        py_logto.models._api_sign_in_exp_get_200_response_sign_in_methods_inner._api_sign_in_exp_get_200_response_signIn_methods_inner(
                            identifier = 'username', 
                            password = True, 
                            verification_code = True, 
                            is_password_primary = True, )
                        ], ),
                sign_up = py_logto.models._api_sign_in_exp_patch_200_response_sign_up._api_sign_in_exp_patch_200_response_signUp(
                    identifiers = [
                        'username'
                        ], 
                    password = True, 
                    verify = True, ),
                social_sign_in_connector_targets = [
                    ''
                    ],
                sign_in_mode = 'SignIn',
                custom_css = '',
                custom_content = {
                    'key' : ''
                    },
                password_policy = py_logto.models._api_sign_in_exp_patch_200_response_password_policy._api_sign_in_exp_patch_200_response_passwordPolicy(
                    length = py_logto.models._api_sign_in_exp_get_200_response_password_policy_length._api_sign_in_exp_get_200_response_passwordPolicy_length(
                        min = 1.337, 
                        max = 1.337, ), 
                    character_types = py_logto.models._api_sign_in_exp_get_200_response_password_policy_character_types._api_sign_in_exp_get_200_response_passwordPolicy_characterTypes(
                        min = 1.337, ), 
                    rejects = py_logto.models._api_sign_in_exp_get_200_response_password_policy_rejects._api_sign_in_exp_get_200_response_passwordPolicy_rejects(
                        pwned = True, 
                        repetition_and_sequence = True, 
                        user_info = True, 
                        words = [
                            ''
                            ], ), ),
                mfa = py_logto.models._api_sign_in_exp_patch_200_response_mfa._api_sign_in_exp_patch_200_response_mfa(
                    factors = [
                        'Totp'
                        ], 
                    policy = 'UserControlled', ),
                single_sign_on_enabled = True,
                social_connectors = [
                    py_logto.models._api__well_known_sign_in_exp_get_200_response_social_connectors_inner._api__well_known_sign_in_exp_get_200_response_socialConnectors_inner(
                        id = '', 
                        target = '', 
                        name = py_logto.models.name.name(), 
                        description = py_logto.models.description.description(), 
                        logo = '', 
                        logo_dark = '', 
                        readme = '', 
                        config_template = '', 
                        form_items = [
                            null
                            ], 
                        platform = 'Native', 
                        is_standard = True, )
                    ],
                sso_connectors = [
                    py_logto.models._api__well_known_sign_in_exp_get_200_response_sso_connectors_inner._api__well_known_sign_in_exp_get_200_response_ssoConnectors_inner(
                        id = '', 
                        connector_name = '', 
                        logo = '', 
                        dark_logo = '', )
                    ],
                forgot_password = py_logto.models._api__well_known_sign_in_exp_get_200_response_forgot_password._api__well_known_sign_in_exp_get_200_response_forgotPassword(
                    phone = True, 
                    email = True, ),
                is_development_tenant = True
            )
        else:
            return ApiWellKnownSignInExpGet200Response(
                id = '0',
                color = py_logto.models._api_sign_in_exp_patch_200_response_color._api_sign_in_exp_patch_200_response_color(
                    primary_color = '#bf3', 
                    is_dark_mode_enabled = True, 
                    dark_primary_color = '#bf3', ),
                branding = py_logto.models._api_interaction_consent_get_200_response_application_branding._api_interaction_consent_get_200_response_application_branding(
                    logo_url = '', 
                    dark_logo_url = '', 
                    favicon = '', ),
                language_info = py_logto.models._api_sign_in_exp_patch_200_response_language_info._api_sign_in_exp_patch_200_response_languageInfo(
                    auto_detect = True, 
                    fallback_language = 'af-ZA', ),
                terms_of_use_url = '',
                privacy_policy_url = '',
                sign_in = py_logto.models._api_sign_in_exp_patch_200_response_sign_in._api_sign_in_exp_patch_200_response_signIn(
                    methods = [
                        py_logto.models._api_sign_in_exp_get_200_response_sign_in_methods_inner._api_sign_in_exp_get_200_response_signIn_methods_inner(
                            identifier = 'username', 
                            password = True, 
                            verification_code = True, 
                            is_password_primary = True, )
                        ], ),
                sign_up = py_logto.models._api_sign_in_exp_patch_200_response_sign_up._api_sign_in_exp_patch_200_response_signUp(
                    identifiers = [
                        'username'
                        ], 
                    password = True, 
                    verify = True, ),
                social_sign_in_connector_targets = [
                    ''
                    ],
                sign_in_mode = 'SignIn',
                custom_css = '',
                custom_content = {
                    'key' : ''
                    },
                password_policy = py_logto.models._api_sign_in_exp_patch_200_response_password_policy._api_sign_in_exp_patch_200_response_passwordPolicy(
                    length = py_logto.models._api_sign_in_exp_get_200_response_password_policy_length._api_sign_in_exp_get_200_response_passwordPolicy_length(
                        min = 1.337, 
                        max = 1.337, ), 
                    character_types = py_logto.models._api_sign_in_exp_get_200_response_password_policy_character_types._api_sign_in_exp_get_200_response_passwordPolicy_characterTypes(
                        min = 1.337, ), 
                    rejects = py_logto.models._api_sign_in_exp_get_200_response_password_policy_rejects._api_sign_in_exp_get_200_response_passwordPolicy_rejects(
                        pwned = True, 
                        repetition_and_sequence = True, 
                        user_info = True, 
                        words = [
                            ''
                            ], ), ),
                mfa = py_logto.models._api_sign_in_exp_patch_200_response_mfa._api_sign_in_exp_patch_200_response_mfa(
                    factors = [
                        'Totp'
                        ], 
                    policy = 'UserControlled', ),
                single_sign_on_enabled = True,
                social_connectors = [
                    py_logto.models._api__well_known_sign_in_exp_get_200_response_social_connectors_inner._api__well_known_sign_in_exp_get_200_response_socialConnectors_inner(
                        id = '', 
                        target = '', 
                        name = py_logto.models.name.name(), 
                        description = py_logto.models.description.description(), 
                        logo = '', 
                        logo_dark = '', 
                        readme = '', 
                        config_template = '', 
                        form_items = [
                            null
                            ], 
                        platform = 'Native', 
                        is_standard = True, )
                    ],
                sso_connectors = [
                    py_logto.models._api__well_known_sign_in_exp_get_200_response_sso_connectors_inner._api__well_known_sign_in_exp_get_200_response_ssoConnectors_inner(
                        id = '', 
                        connector_name = '', 
                        logo = '', 
                        dark_logo = '', )
                    ],
                forgot_password = py_logto.models._api__well_known_sign_in_exp_get_200_response_forgot_password._api__well_known_sign_in_exp_get_200_response_forgotPassword(
                    phone = True, 
                    email = True, ),
                is_development_tenant = True,
        )
        """

    def testApiWellKnownSignInExpGet200Response(self):
        """Test ApiWellKnownSignInExpGet200Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
