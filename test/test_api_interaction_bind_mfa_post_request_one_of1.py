# coding: utf-8

"""
    Logto API references

    API references for Logto services.

    The version of the OpenAPI document: Cloud
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from py_logto.models.api_interaction_bind_mfa_post_request_one_of1 import ApiInteractionBindMfaPostRequestOneOf1

class TestApiInteractionBindMfaPostRequestOneOf1(unittest.TestCase):
    """ApiInteractionBindMfaPostRequestOneOf1 unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ApiInteractionBindMfaPostRequestOneOf1:
        """Test ApiInteractionBindMfaPostRequestOneOf1
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ApiInteractionBindMfaPostRequestOneOf1`
        """
        model = ApiInteractionBindMfaPostRequestOneOf1()
        if include_optional:
            return ApiInteractionBindMfaPostRequestOneOf1(
                type = '',
                id = '',
                raw_id = '',
                response = py_logto.models._api_interaction_bind_mfa_post_request_one_of_1_response._api_interaction_bind_mfa_post_request_oneOf_1_response(
                    client_data_json = '', 
                    attestation_object = '', 
                    authenticator_data = '', 
                    transports = [
                        'usb'
                        ], 
                    public_key_algorithm = 1.337, 
                    public_key = '', ),
                authenticator_attachment = 'cross-platform',
                client_extension_results = py_logto.models._api_interaction_bind_mfa_post_request_one_of_1_client_extension_results._api_interaction_bind_mfa_post_request_oneOf_1_clientExtensionResults(
                    appid = True, 
                    crep_props = py_logto.models._api_interaction_bind_mfa_post_request_one_of_1_client_extension_results_crep_props._api_interaction_bind_mfa_post_request_oneOf_1_clientExtensionResults_crepProps(
                        rk = True, ), 
                    hmac_create_secret = True, )
            )
        else:
            return ApiInteractionBindMfaPostRequestOneOf1(
                type = '',
                id = '',
                raw_id = '',
                response = py_logto.models._api_interaction_bind_mfa_post_request_one_of_1_response._api_interaction_bind_mfa_post_request_oneOf_1_response(
                    client_data_json = '', 
                    attestation_object = '', 
                    authenticator_data = '', 
                    transports = [
                        'usb'
                        ], 
                    public_key_algorithm = 1.337, 
                    public_key = '', ),
                client_extension_results = py_logto.models._api_interaction_bind_mfa_post_request_one_of_1_client_extension_results._api_interaction_bind_mfa_post_request_oneOf_1_clientExtensionResults(
                    appid = True, 
                    crep_props = py_logto.models._api_interaction_bind_mfa_post_request_one_of_1_client_extension_results_crep_props._api_interaction_bind_mfa_post_request_oneOf_1_clientExtensionResults_crepProps(
                        rk = True, ), 
                    hmac_create_secret = True, ),
        )
        """

    def testApiInteractionBindMfaPostRequestOneOf1(self):
        """Test ApiInteractionBindMfaPostRequestOneOf1"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
