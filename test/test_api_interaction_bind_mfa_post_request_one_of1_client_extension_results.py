# coding: utf-8

"""
    Logto API references

    API references for Logto services.

    The version of the OpenAPI document: Cloud
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from py_logto.models.api_interaction_bind_mfa_post_request_one_of1_client_extension_results import ApiInteractionBindMfaPostRequestOneOf1ClientExtensionResults

class TestApiInteractionBindMfaPostRequestOneOf1ClientExtensionResults(unittest.TestCase):
    """ApiInteractionBindMfaPostRequestOneOf1ClientExtensionResults unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ApiInteractionBindMfaPostRequestOneOf1ClientExtensionResults:
        """Test ApiInteractionBindMfaPostRequestOneOf1ClientExtensionResults
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ApiInteractionBindMfaPostRequestOneOf1ClientExtensionResults`
        """
        model = ApiInteractionBindMfaPostRequestOneOf1ClientExtensionResults()
        if include_optional:
            return ApiInteractionBindMfaPostRequestOneOf1ClientExtensionResults(
                appid = True,
                crep_props = py_logto.models._api_interaction_bind_mfa_post_request_one_of_1_client_extension_results_crep_props._api_interaction_bind_mfa_post_request_oneOf_1_clientExtensionResults_crepProps(
                    rk = True, ),
                hmac_create_secret = True
            )
        else:
            return ApiInteractionBindMfaPostRequestOneOf1ClientExtensionResults(
        )
        """

    def testApiInteractionBindMfaPostRequestOneOf1ClientExtensionResults(self):
        """Test ApiInteractionBindMfaPostRequestOneOf1ClientExtensionResults"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
