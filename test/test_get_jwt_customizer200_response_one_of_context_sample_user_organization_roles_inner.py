# coding: utf-8

"""
    Logto API references

    API references for Logto services.

    The version of the OpenAPI document: Cloud
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from py_logto.models.get_jwt_customizer200_response_one_of_context_sample_user_organization_roles_inner import GetJwtCustomizer200ResponseOneOfContextSampleUserOrganizationRolesInner

class TestGetJwtCustomizer200ResponseOneOfContextSampleUserOrganizationRolesInner(unittest.TestCase):
    """GetJwtCustomizer200ResponseOneOfContextSampleUserOrganizationRolesInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GetJwtCustomizer200ResponseOneOfContextSampleUserOrganizationRolesInner:
        """Test GetJwtCustomizer200ResponseOneOfContextSampleUserOrganizationRolesInner
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GetJwtCustomizer200ResponseOneOfContextSampleUserOrganizationRolesInner`
        """
        model = GetJwtCustomizer200ResponseOneOfContextSampleUserOrganizationRolesInner()
        if include_optional:
            return GetJwtCustomizer200ResponseOneOfContextSampleUserOrganizationRolesInner(
                organization_id = '',
                role_id = '',
                role_name = ''
            )
        else:
            return GetJwtCustomizer200ResponseOneOfContextSampleUserOrganizationRolesInner(
                organization_id = '',
                role_id = '',
                role_name = '',
        )
        """

    def testGetJwtCustomizer200ResponseOneOfContextSampleUserOrganizationRolesInner(self):
        """Test GetJwtCustomizer200ResponseOneOfContextSampleUserOrganizationRolesInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
