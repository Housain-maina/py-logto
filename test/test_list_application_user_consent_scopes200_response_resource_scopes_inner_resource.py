# coding: utf-8

"""
    Python SDK for Logto API

    Python SDK for Logto API.  Note: This SDK is for Logto Cloud and OSS. However, if you are using Logto OSS, some features available in the SDK may not work for you. Please refer to the response of `/api/swagger.json` endpoint on your Logto OSS instance for features available to you.

    The version of the OpenAPI document: 1.22.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from py_logto.models.list_application_user_consent_scopes200_response_resource_scopes_inner_resource import ListApplicationUserConsentScopes200ResponseResourceScopesInnerResource

class TestListApplicationUserConsentScopes200ResponseResourceScopesInnerResource(unittest.TestCase):
    """ListApplicationUserConsentScopes200ResponseResourceScopesInnerResource unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ListApplicationUserConsentScopes200ResponseResourceScopesInnerResource:
        """Test ListApplicationUserConsentScopes200ResponseResourceScopesInnerResource
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ListApplicationUserConsentScopes200ResponseResourceScopesInnerResource`
        """
        model = ListApplicationUserConsentScopes200ResponseResourceScopesInnerResource()
        if include_optional:
            return ListApplicationUserConsentScopes200ResponseResourceScopesInnerResource(
                id = '0',
                name = '0',
                indicator = '0'
            )
        else:
            return ListApplicationUserConsentScopes200ResponseResourceScopesInnerResource(
                id = '0',
                name = '0',
                indicator = '0',
        )
        """

    def testListApplicationUserConsentScopes200ResponseResourceScopesInnerResource(self):
        """Test ListApplicationUserConsentScopes200ResponseResourceScopesInnerResource"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
