# coding: utf-8

"""
    Logto API references

    API references for Logto services. To learn more about how to interact with Logto APIs, see [Interact with Management API](https://docs.logto.io/docs/recipes/interact-with-management-api/).

    The version of the OpenAPI document: Cloud
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from py_logto.api.users_api import UsersApi


class TestUsersApi(unittest.TestCase):
    """UsersApi unit test stubs"""

    def setUp(self) -> None:
        self.api = UsersApi()

    def tearDown(self) -> None:
        pass

    def test_api_users_get(self) -> None:
        """Test case for api_users_get

        Get users
        """
        pass

    def test_api_users_post(self) -> None:
        """Test case for api_users_post

        Create user
        """
        pass

    def test_api_users_user_id_custom_data_get(self) -> None:
        """Test case for api_users_user_id_custom_data_get

        Get user custom data
        """
        pass

    def test_api_users_user_id_custom_data_patch(self) -> None:
        """Test case for api_users_user_id_custom_data_patch

        Update user custom data
        """
        pass

    def test_api_users_user_id_delete(self) -> None:
        """Test case for api_users_user_id_delete

        Delete user
        """
        pass

    def test_api_users_user_id_get(self) -> None:
        """Test case for api_users_user_id_get

        Get user
        """
        pass

    def test_api_users_user_id_has_password_get(self) -> None:
        """Test case for api_users_user_id_has_password_get

        Check if user has password
        """
        pass

    def test_api_users_user_id_identities_post(self) -> None:
        """Test case for api_users_user_id_identities_post

        Link social identity to user
        """
        pass

    def test_api_users_user_id_identities_target_delete(self) -> None:
        """Test case for api_users_user_id_identities_target_delete

        Delete social identity from user
        """
        pass

    def test_api_users_user_id_identities_target_put(self) -> None:
        """Test case for api_users_user_id_identities_target_put

        Update social identity of user
        """
        pass

    def test_api_users_user_id_is_suspended_patch(self) -> None:
        """Test case for api_users_user_id_is_suspended_patch

        Update user suspension status
        """
        pass

    def test_api_users_user_id_mfa_verifications_get(self) -> None:
        """Test case for api_users_user_id_mfa_verifications_get

        Get user's MFA verifications
        """
        pass

    def test_api_users_user_id_mfa_verifications_post(self) -> None:
        """Test case for api_users_user_id_mfa_verifications_post

        Create an MFA verification for a user
        """
        pass

    def test_api_users_user_id_mfa_verifications_verification_id_delete(self) -> None:
        """Test case for api_users_user_id_mfa_verifications_verification_id_delete

        Delete an MFA verification for a user
        """
        pass

    def test_api_users_user_id_organizations_get(self) -> None:
        """Test case for api_users_user_id_organizations_get

        Get organizations for a user
        """
        pass

    def test_api_users_user_id_password_patch(self) -> None:
        """Test case for api_users_user_id_password_patch

        Update user password
        """
        pass

    def test_api_users_user_id_password_verify_post(self) -> None:
        """Test case for api_users_user_id_password_verify_post

        Verify user password
        """
        pass

    def test_api_users_user_id_patch(self) -> None:
        """Test case for api_users_user_id_patch

        Update user
        """
        pass

    def test_api_users_user_id_profile_patch(self) -> None:
        """Test case for api_users_user_id_profile_patch

        Update user profile
        """
        pass

    def test_api_users_user_id_roles_get(self) -> None:
        """Test case for api_users_user_id_roles_get

        Get roles for user
        """
        pass

    def test_api_users_user_id_roles_post(self) -> None:
        """Test case for api_users_user_id_roles_post

        Assign roles to user
        """
        pass

    def test_api_users_user_id_roles_put(self) -> None:
        """Test case for api_users_user_id_roles_put

        Update roles for user
        """
        pass

    def test_api_users_user_id_roles_role_id_delete(self) -> None:
        """Test case for api_users_user_id_roles_role_id_delete

        Remove role from user
        """
        pass


if __name__ == '__main__':
    unittest.main()
